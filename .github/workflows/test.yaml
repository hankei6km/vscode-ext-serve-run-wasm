name: test
on:
  pull_request:
  push:
    branches:
      - 'main'
    tags:
      - '!v*'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # https://docs.github.com/ja/free-pro-team@latest/actions/guides/caching-dependencies-to-speed-up-workflows
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm キャッシュファイルは Linux/macOS の「~/.npm」に保存される
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-

      # 今回は devcontainer-ci は使わない予定。
      - name: Install packages(to run xvfb)
        run: |
          sudo apt update -y
          sudo apt install -y --no-install-recommends xauth libgtk-3-0 xvfb

      - name: Install modules
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Cache artifacts for wasm
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('**/Cargo.lock') }}

      - name: Build .wasm to test
        # ビルド環境をもう少し整理する必要がある.
        # npm script も if が増えてやりにくくなっている.
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/hankei6km/h6-dev-containers
          imageTag: 2022-12-01-main-cli_rust
          push: never
          subFolder: .devcontainer/cli
          # パスの指定方法はあとで考える
          runCmd: |
            cd ../../
            cargo build -q --release
            cargo build -q --manifest-path wasm/Cargo.toml --target wasm32-wasi

      - name: Run tests
        run: |
          npm run lint:type-check
          npm run test
